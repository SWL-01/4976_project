@page "/findMbti"
@inject _4976Project.Services.MbtiService MbtiService
@inject NavigationManager NavigationManager
@using Newtonsoft.Json;
@using System.Text;
@using System.Net.Http.Headers;
@using Newtonsoft.Json.Linq;

<PageTitle>Find MBTI</PageTitle>

<h1>Find MBTI</h1>

<hr />

<div class="container">
    <div class="row">
        <div class="col-4">
                    <h4>Enter 5 things that can describe your personality or words you say often</h4> <br>

            @if (!responseReceived) {
                <div class="textMessage">
                    1. <input @bind="message1" /> <br>
                    2. <input @bind="message2" /> <br>
                    3. <input @bind="message3" /> <br>
                    4. <input @bind="message4" /> <br>
                    5. <input @bind="message5" /> <br> <br>

                    <button @onclick="needHelp" id="needHelp" class="btn btn-outline-danger">Need Help?</button>
                    <button @onclick="SendMessage" id="testBtn" class="btn btn-success">Test</button>
                </div>
            }
            @if (messages.Count > 0) {
                <div class="messages">
                    @for (int i = 0; i < messages.Count; i++) {
                        @if (i % 2 == 0) {
                            <div class="question"><span class="titles">Your MBTI Type:</span> <b>@messages[i]</b></div>
                        } else {
                            <div class="response"><span class="titles">Description:</span> @messages[i]</div>
                            <div>
                                <hr>
                                <p>If this sounds like your MBTI, click <b>Save</b> and explore more about it in the profile page. Otherwise, please describe more about you.</p>
                                <button @onclick="saveMbtiResults" class="btn btn-success">Save</button>
                                <button @onclick="HandleNoClick" class="btn btn-danger">No</button>
                            </div>
                        }
                    }
                </div>
            }
            <br>
            <div>
                 <p class="testing-message">@testing</p>
            </div>
        </div>
        @if (helpNeeded && messages.Count <= 0) {
            <div class="col-md-6 col-md-offset-2">
                <div class="guide clearfix">
                    <h5>Here are some examples:</h5>
                    <p>1. I often make a backup plan for a backup plan.</p>
                    <p>2. I regularly make new friends.</p>
                    <p>3. I am not too interested in discussing various interpretations and analyses of creative works.</p>
                    <p>4. I am more inclined to follow your head than your heart.</p>
                    <p>5. I enjoy participating in group activities.</p>
                    <p>6. Let's just do it now and see what happens.</p>
                    <p>7. I understand how you feel.</p>
                    <p>8. Let's stick to the plan.</p>
                    <p>9. This is the rule. We should follow it.</p>
                    <p>10. How can I help you?</p>
                    <button @onclick="noHelp" class="btn btn-outline-primary">Got it, thanks</button>
                </div>
            </div>
        }
        @if (messages.Count > 0) {
            <div class="col-md-6 col-md-offset-2">
                <img src="mbti_description.png" alt="" id="mbtiDescImg">
            </div>
        }

    </div>
</div>

@code {
    private bool responseReceived = false;
    private bool helpNeeded = false;
    public string message1;
    public string message2;
    public string message3;
    public string message4;
    public string message5;
    public string testing;
    public List<string> messages = new List<string>();
    public string response;
    private static HttpClient Http = new HttpClient();

    public class ApiResponse
    {
        public string question { get; set; }
        public string answer { get; set; }
    }

    public async Task SendMessage()
    {
        if (string.IsNullOrEmpty(message1) || 
            string.IsNullOrEmpty(message2) ||
            string.IsNullOrEmpty(message3) ||
            string.IsNullOrEmpty(message4) ||
            string.IsNullOrEmpty(message5))
        {
            testing = "Please enter all five inputs.";
            return;
        }
        var combinedMessage = $"Detect my personality based on mbti and these messages '{message1}', '{message2}', '{message3}', '{message4}', and '{message5}', what is this persons's MBTI type? Write final answer like you are istp or whatever.";
        var mbtiType = await MbtiService.SendMessage(combinedMessage);
        messages = new List<string>();
        if (mbtiDescriptions.TryGetValue(mbtiType, out string description)) {
                messages.Add(mbtiType);
            messages.Add(description);
        } else {
            messages.Add("MBTI Type not found.");
        }
        message1 = string.Empty;
        message2 = string.Empty;
        message3 = string.Empty;
        message4 = string.Empty;
        message5 = string.Empty;
        responseReceived = true;
        StateHasChanged();
    }

    public async Task needHelp()
    {
        helpNeeded = true;
    }

    public async Task noHelp()
    {
        helpNeeded = false;
    }

    public async Task saveMbtiResults() {
        var mbtiType = MbtiService.ExtractMBTITypes(messages[0]).FirstOrDefault();
        await MbtiService.SaveMbtiResults(mbtiType);
        NavigationManager.NavigateTo("/profile");
    }

    private void HandleNoClick()
    {
        // Reset the state to show the input fields again
        responseReceived = false;
        // Optionally clear previous messages or keep them
        messages.Clear(); // Uncomment this line if you want to clear previous messages
        // Update UI
        StateHasChanged();
    }

    Dictionary<string, string> mbtiDescriptions = new Dictionary<string, string>
    {
        { "ISTJ", "ISTJs are responsible organizers, driven to create and enforce order within systems and institutions. They are detail-oriented and have a strong focus on tradition and loyalty." },
        { "ISFJ", "ISFJs are dedicated caretakers, motivated by duty and their desire to help others. They are meticulous and thoughtful, valuing stability and security." },
        { "INFJ", "INFJs are insightful visionaries, driven by their principles and ideals. They are complex, intuitive, and deeply empathetic, often feeling misunderstood." },
        { "INTJ", "INTJs are strategic innovators, with a drive for efficiency and a clear vision of what they believe is best for the future. They are independent and decisive." },
        { "ISTP", "ISTPs are practical explorers, excited by hands-on learning and new experiences. They are adaptable and resourceful, preferring to work autonomously." },
        { "ISFP", "ISFPs are charming artists, inspired by connections with people and ideas. They enjoy expressing themselves creatively and seek harmony in their environment." },
        { "INFP", "INFPs are imaginative idealists, guided by their own core values and beliefs. They are open-minded and compassionate, often feeling a deep sense of purpose." },
        { "INTP", "INTPs are innovative analysts, curious about systems and how things work. They are abstract thinkers, valuing logic and knowledge over emotion." },
        { "ESTP", "ESTPs are energetic problem-solvers, eager to take quick action. They are spontaneous, competitive, and social, often enjoying physical activities and challenges." },
        { "ESFP", "ESFPs are enthusiastic improvisers, enjoying life at the moment and bringing excitement into others' lives. They are playful, spontaneous, and resourceful." },
        { "ENFP", "ENFPs are imaginative motivators, enthusiastic and open-minded, always seeing possibilities. They are charismatic, expressive, and drawn to new ideas and experiences." },
        { "ENTP", "ENTPs are enterprising explorers, always questioning and pondering the world around them. They are inventive, enthusiastic, and enjoy debating ideas." },
        { "ESTJ", "ESTJs are efficient organizers, leading with decisiveness and clear rules. They value predictability, order, and respect for authority and tradition." },
        { "ESFJ", "ESFJs are conscientious helpers, sociable and eager to please. They seek harmony in their environment and work diligently to take care of others." },
        { "ENFJ", "ENFJs are compassionate facilitators, sensitive to the needs of others. They are persuasive, organized, and drawn to supporting others and nurturing their potential." },
        { "ENTJ", "ENTJs are commanding strategists, highly rational and assertive. They are driven to organize and are often in pursuit of efficiency and long-term planning." }
    };

}

<style scoped>
#mbtiDescImg {
    margin-top: 80px;
    margin-left: 20px;
}
#needHelp {
    width: 80%;
    margin-left: 18px;
    padding: 10px;
    margin-top: 10px;
    font-size: 16px;
}
.clearfix::after {
    content: "";
    display: table;
    clear: both;
}
.col-md-6.col-md-offset-2 p {
    margin-bottom: 8px;
}
.col-md-6.col-md-offset-2 h5 {
    background-color: #b1cfee;
    padding: 5px;
}
.titles {
    background-color: #b1cfee;
    padding: 5px;
    border-radius: 6px;
}
.guide {
    margin-top: 30px;
    margin-left: 20px;
    border: 2px solid #b1cfee;
    padding: 20px;
}
.question, .response {
    margin-top: 10px;
}
.guide button {
    float: right;
}
.needHelp {
    display: block;
}
.container {
    margin-top: 50px;
}
.textMessage {
    margin-top: 0;
}
.textMessage input {
    width: 80%;
    padding: 10px;
    margin: 5px 0;
    box-sizing: border-box;
}
#testBtn {
    width: 80%;
    margin-left: 18px;
    padding: 10px;
    margin-top: 10px;
    color: white;
    cursor: pointer;
    font-size: 16px;
}

.testing-message {
    color: red;
    font-size: 18px;
    margin-bottom: 10px;
}

.messages {
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 5px;
    font-size: 17px;
}

.messages p {
    margin: 5px 0;
}

.messages button {
    width: 30%;
    padding: 10px;
    margin-top: 10px;
    border: none;
    color: white;
    font-size: 16px;
}
</style>